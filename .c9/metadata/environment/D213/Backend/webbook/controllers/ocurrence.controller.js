{"changed":true,"filter":false,"title":"ocurrence.controller.js","tooltip":"/D213/Backend/webbook/controllers/ocurrence.controller.js","value":"const http = require('http');\nconst mysql = require('mysql');\nconst connect = require('../config/connect');\nconst express = require('express');\nconst app = express();\n\n//função de leitura que retorna o resultado no callback\nfunction readOcurrence(req, res) {\n    //criar e executar a query de leitura na BD\n    connect.con.query('SELECT acess_code, arrival, cost,departure,description, distance, id_entity,id_occurrence,id_request,local, occurrence_type,origin,status from ocurrence order by id_occurrence desc', function(err,\n        rows, fields) {\n        if (!err) {\n            //verifica os resultados se o número de linhas for 0 devolve dados não encontrados, caso contrário envia os resultados (rows).\n            if (rows.length == 0) {\n                res.status(404).send(\"Data not found\");\n            }\n            else {\n                res.status(200).send(rows);\n            }\n        }\n        else\n            console.log('Error while performing Query.', err);\n    });\n}\n\n//função de leitura que retorna o resultado de um iduser\nfunction readIDOcurrence(req, res) {\n    //criar e executar a query de leitura na BD\n    const iduser = req.sanitize('id').escape();\n    const post = {\n        idUser: iduser\n    };\n    connect.con.query('SELECT name, email, dateReg from users where iduser = ? order by dateReg desc', post,\n        function(err, rows, fields) {\n            if (!err) {\n                //verifica os resultados se o número de linhas for 0 devolve dados não encontrados, caso contrário envia os resultados (rows).\n                if (rows.length == 0) {\n                    res.status(404).send({\n                        \"msg\": \"data not found\"\n                    });\n                }\n                else {\n                    res.status(200).send(rows);\n                }\n            }\n            else\n                res.status(400).send({\n                    \"msg\": err.code\n                });\n            console.log('Error while performing Query.', err);\n        });\n}\n\n//função de gravação que recebe os 3 parâmetros\nfunction saveOcurrence(req, res) {\n    //receber os dados do formuário que são enviados por post\n    const name = req.sanitize('name').escape();\n    const email = req.sanitize('email').escape();\n    const cod = req.sanitize('pass').escape();\n    var query = \"\";\n    var post = {\n        username: email,\n        name: name,\n        email: email,\n        code: cod\n    };\n    //console.log(\"with hash:\" + hash);\n    query = connect.con.query('INSERT INTO users SET ?', post, function(err, rows, fields) {\n        console.log(query.sql);\n        if (!err) {\n            res.status(200).location(rows.insertId).send({\n                \"msg\": \"inserted with success\"\n            });\n            console.log(\"Number of records inserted: \" + rows.affectedRows);\n        }\n        else {\n            if (err.code == \"ER_DUP_ENTRY\") {\n                res.status(409).send({ \"msg\": err.code });\n                console.log('Error while performing Query.', err);\n            }\n            else res.status(400).send({ \"msg\": err.code });\n        }\n    });\n}\n\n//efetuar updade de todos os dados para um determinado iduser\nfunction updateOcurrence(req, res) {\n    //receber os dados do formuário que são enviados por post\n    const name = req.sanitize('name').escape();\n    const email = req.sanitize('email').escape();\n    const cod = req.sanitize('code').escape();\n    const iduser = req.sanitize('id').escape();\n    console.log(\"without hahsh:\" + req.body.pass);\n    var query = \"\";\n    var update = {\n        name,\n        email,\n        cod,\n        iduser\n    };\n    query = connect.con.query('INSERT INTO users SET name = ?, email =?, code=? where iduser=?', update, function(err, rows,\n        fields) {\n        console.log(query.sql);\n        if (!err) {\n            console.log(\"Number of records updated: \" + rows.affectedRows);\n            res.status(200).send({ \"msg\": \"update with success\" });\n        }\n        else {\n            res.status(400).send({ \"msg\": err.code });\n            console.log('Error while performing Query.', err);\n        }\n    });\n}\n\n//função que apaga todos os dados de um iduser\nfunction deleteIDOcurrence(req, res) {\n    //criar e executar a query de leitura na BD\n    const iduser = req.sanitize('id').escape();\n    const post = {\n        idUser: iduser\n    };\n    connect.con.query('DELETE from users where iduser = ?', post, function(err, rows, fields) {\n        if (!err) {\n            //verifica os resultados se o número de linhas for 0 devolve dados não encontrados, caso contrário envia os resultados (rows).\n            if (rows.length == 0) {\n                res.status(404).send({\n                    \"msg\": \"data not found\"\n                });\n            }\n            else {\n                res.status(200).send({\n                    \"msg\": \"success\"\n                });\n            }\n        }\n        else\n            console.log('Error while performing Query.', err);\n    });\n}\n\n//                     Witness- ocurrence\n\n//função de leitura que retorna o resultado de witness_ocorrence no callback\nfunction readWitnessOcurrence(req, res) {\n    //criar e executar a query de leitura na BD\n    connect.con.query('SELECT * FROM witness_ocurrence order by id_ocurrence', function(err,\n        rows, fields) {\n        if (!err) {\n            //verifica os resultados se o número de linhas for 0 devolve dados não encontrados, caso contrário envia os resultados (rows).\n            if (rows.length == 0) {\n                res.status(404).send(\"Data not found\");\n            }\n            else {\n                res.status(200).send(rows);\n            }\n        }\n        else\n            console.log('Error while performing Query.', err);\n    });\n}\n\n//função de leitura que retorna o resultado de um witness id\nfunction readIDWitnessOcurrence(req, res) {\n    //criar e executar a query de leitura na BD\n    const id_witness = req.sanitize('id_witness').escape();\n    const ocurrence_id = req.sanitize('ocurrence_id').escape();\n    const post = {\n        id_witness: id_witness,\n        ocurrence_id: ocurrence_id\n    };\n    connect.con.query('SELECT * from witness_ocurrence where id_witness = ? and ocurrence_id = ?', post,\n        function(err, rows, fields) {\n            if (!err) {\n                //verifica os resultados se o número de linhas for 0 devolve dados não encontrados, caso contrário envia os resultados (rows).\n                if (rows.length == 0) {\n                    res.status(404).send({\n                        \"msg\": \"data not found\"\n                    });\n                }\n                else {\n                    res.status(200).send(rows);\n                }\n            }\n            else\n                res.status(400).send({\n                    \"msg\": err.code\n                });\n            console.log('Error while performing Query.', err);\n        });\n}\n\n//função de gravação que recebe os 5 parametros\nfunction saveWitnessOcurrence(req, res) {\n    //receber os dados do formuário que são enviados por post\n    const date = req.sanitize('date').escape();\n    const group_nr = req.sanitize('group_nr').escape();\n    const id_ocurrence = req.sanitize('id_ocurrence').escape();\n    const justification = req.sanitize('justification').escape();\n    const testimony = req.sanitize('testimony').escape();\n    const witness_id = req.sanitize('witness_id').escape();\n    var query = \"\";\n    /*var post = {\n        witness_id: witness_id,\n        name: name,\n        email: email,\n        place: place,\n        profession: profession\n    };*/\n    //console.log(\"with hash:\" + hash);\n    query = connect.con.query('INSERT INTO ?? VALUES (?,?,?,?,?,?)', [\"witness_ocurrence\", date, group_nr, id_ocurrence, justification, testimony, witness_id], function(err, rows, fields) {\n        console.log(query.sql);\n        if (!err) {\n            res.status(200).location(rows.insertId).send({\n                \"msg\": \"inserted with success\"\n            });\n            console.log(\"Number of records inserted: \" + rows.affectedRows);\n        }\n        else {\n            if (err.code == \"ER_DUP_ENTRY\") {\n                res.status(409).send({ \"msg\": err.code });\n                console.log('Error while performing Query.', err);\n            }\n            else res.status(400).send({ \"msg\": err.code });\n        }\n    });\n}\n\nfunction updateWitnessOcurrence(req, res) {\n    //receber os dados do formuário que são enviados por post\n    const date = req.sanitize('date').escape();\n    const group_nr = req.sanitize('group_nr').escape();\n    const id_ocurrence = req.sanitize('id_ocurrence').escape();\n    const justification = req.sanitize('justification').escape();\n    const testimony = req.sanitize('testimony').escape();\n    const witness_id = req.sanitize('witness_id').escape();\n    console.log(\"without hahsh:\" + req.body.pass);\n    var query = \"\";\n    /*var update = {\n        witness_id,\n        name,\n        email,\n        place,\n        profession\n    };*/\n    query = connect.con.query('Update ?? SET date = ?, group_nr =?,id_ocurrence=?, justification=? ,testimony=?, where id_witness=?', [\"witness_ocurrence\", date, group_nr, id_ocurrence, justification, testimony, witness_id], function(err, rows,\n        fields) {\n        console.log(query.sql);\n        if (!err) {\n            console.log(\"Number of records updated: \" + rows.affectedRows);\n            res.status(200).send({ \"msg\": \"update with success\" });\n        }\n        else {\n            res.status(400).send({ \"msg\": err.code });\n            console.log('Error while performing Query.', err);\n        }\n    });\n}\n\n//função que apaga todos os dados de um witness_ocurrence\nfunction deleteIDWitnessOcurrence(req, res) {\n    //criar e executar a query de leitura na BD\n    const witness_id = req.sanitize('witness_id').escape();\n    const post = {\n        witness_id: witness_id\n    };\n    connect.con.query('DELETE from witness_ocurrence where witness_id = ?', post, function(err, rows, fields) {\n        if (!err) {\n            //verifica os resultados se o número de linhas for 0 devolve dados não encontrados, caso contrário envia os resultados (rows).\n\n            if (rows.length == 0) {\n                res.status(404).send({\n                    \"msg\": \"data not found\"\n                });\n            }\n            else {\n                res.status(200).send({\n                    \"msg\": \"success\"\n                });\n            }\n        }\n        else\n            console.log('Error while performing Query.', err);\n    });\n}\n\nmodule.exports = {\n    readWitnessOcurrence: readWitnessOcurrence,\n    readIDWitnessOcurrence: readIDWitnessOcurrence,\n    saveWitnessOcurrence: saveWitnessOcurrence,\n    updateWitnessOcurrence: updateWitnessOcurrence,\n    deleteIDWitnessOcurrence: deleteIDWitnessOcurrence\n\n};\n","undoManager":{"mark":-2,"position":32,"stack":[[{"start":{"row":9,"column":33},"end":{"row":9,"column":34},"action":"remove","lines":["e"],"id":2},{"start":{"row":9,"column":32},"end":{"row":9,"column":33},"action":"remove","lines":["m"]},{"start":{"row":9,"column":31},"end":{"row":9,"column":32},"action":"remove","lines":["a"]},{"start":{"row":9,"column":30},"end":{"row":9,"column":31},"action":"remove","lines":["n"]}],[{"start":{"row":9,"column":30},"end":{"row":9,"column":31},"action":"insert","lines":["a"],"id":3},{"start":{"row":9,"column":31},"end":{"row":9,"column":32},"action":"insert","lines":["c"]},{"start":{"row":9,"column":32},"end":{"row":9,"column":33},"action":"insert","lines":["e"]},{"start":{"row":9,"column":33},"end":{"row":9,"column":34},"action":"insert","lines":["s"]},{"start":{"row":9,"column":34},"end":{"row":9,"column":35},"action":"insert","lines":["s"]},{"start":{"row":9,"column":35},"end":{"row":9,"column":36},"action":"insert","lines":["_"]},{"start":{"row":9,"column":36},"end":{"row":9,"column":37},"action":"insert","lines":["c"]}],[{"start":{"row":9,"column":37},"end":{"row":9,"column":38},"action":"insert","lines":["o"],"id":4},{"start":{"row":9,"column":38},"end":{"row":9,"column":39},"action":"insert","lines":["d"]},{"start":{"row":9,"column":39},"end":{"row":9,"column":40},"action":"insert","lines":["e"]}],[{"start":{"row":9,"column":46},"end":{"row":9,"column":47},"action":"remove","lines":["l"],"id":5},{"start":{"row":9,"column":45},"end":{"row":9,"column":46},"action":"remove","lines":["i"]},{"start":{"row":9,"column":44},"end":{"row":9,"column":45},"action":"remove","lines":["a"]},{"start":{"row":9,"column":43},"end":{"row":9,"column":44},"action":"remove","lines":["m"]},{"start":{"row":9,"column":42},"end":{"row":9,"column":43},"action":"remove","lines":["e"]}],[{"start":{"row":9,"column":42},"end":{"row":9,"column":43},"action":"insert","lines":["a"],"id":6},{"start":{"row":9,"column":43},"end":{"row":9,"column":44},"action":"insert","lines":["r"]},{"start":{"row":9,"column":44},"end":{"row":9,"column":45},"action":"insert","lines":["r"]},{"start":{"row":9,"column":45},"end":{"row":9,"column":46},"action":"insert","lines":["i"]},{"start":{"row":9,"column":46},"end":{"row":9,"column":47},"action":"insert","lines":["v"]},{"start":{"row":9,"column":47},"end":{"row":9,"column":48},"action":"insert","lines":["a"]},{"start":{"row":9,"column":48},"end":{"row":9,"column":49},"action":"insert","lines":["l"]}],[{"start":{"row":9,"column":51},"end":{"row":9,"column":58},"action":"remove","lines":["dateReg"],"id":7},{"start":{"row":9,"column":51},"end":{"row":9,"column":52},"action":"insert","lines":["c"]},{"start":{"row":9,"column":52},"end":{"row":9,"column":53},"action":"insert","lines":["o"]},{"start":{"row":9,"column":53},"end":{"row":9,"column":54},"action":"insert","lines":["s"]},{"start":{"row":9,"column":54},"end":{"row":9,"column":55},"action":"insert","lines":["t"]},{"start":{"row":9,"column":55},"end":{"row":9,"column":56},"action":"insert","lines":[","]}],[{"start":{"row":9,"column":56},"end":{"row":9,"column":57},"action":"insert","lines":["d"],"id":8},{"start":{"row":9,"column":57},"end":{"row":9,"column":58},"action":"insert","lines":["e"]},{"start":{"row":9,"column":58},"end":{"row":9,"column":59},"action":"insert","lines":["p"]},{"start":{"row":9,"column":59},"end":{"row":9,"column":60},"action":"insert","lines":["a"]},{"start":{"row":9,"column":60},"end":{"row":9,"column":61},"action":"insert","lines":["r"]},{"start":{"row":9,"column":61},"end":{"row":9,"column":62},"action":"insert","lines":["t"]},{"start":{"row":9,"column":62},"end":{"row":9,"column":63},"action":"insert","lines":["u"]},{"start":{"row":9,"column":63},"end":{"row":9,"column":64},"action":"insert","lines":["r"]},{"start":{"row":9,"column":64},"end":{"row":9,"column":65},"action":"insert","lines":["e"]}],[{"start":{"row":9,"column":65},"end":{"row":9,"column":66},"action":"insert","lines":[","],"id":9},{"start":{"row":9,"column":66},"end":{"row":9,"column":67},"action":"insert","lines":["d"]},{"start":{"row":9,"column":67},"end":{"row":9,"column":68},"action":"insert","lines":["e"]},{"start":{"row":9,"column":68},"end":{"row":9,"column":69},"action":"insert","lines":["s"]},{"start":{"row":9,"column":69},"end":{"row":9,"column":70},"action":"insert","lines":["c"]},{"start":{"row":9,"column":70},"end":{"row":9,"column":71},"action":"insert","lines":["r"]},{"start":{"row":9,"column":71},"end":{"row":9,"column":72},"action":"insert","lines":["i"]},{"start":{"row":9,"column":72},"end":{"row":9,"column":73},"action":"insert","lines":["p"]}],[{"start":{"row":9,"column":73},"end":{"row":9,"column":74},"action":"insert","lines":["t"],"id":10},{"start":{"row":9,"column":74},"end":{"row":9,"column":75},"action":"insert","lines":["i"]},{"start":{"row":9,"column":75},"end":{"row":9,"column":76},"action":"insert","lines":["o"]},{"start":{"row":9,"column":76},"end":{"row":9,"column":77},"action":"insert","lines":["n"]},{"start":{"row":9,"column":77},"end":{"row":9,"column":78},"action":"insert","lines":[","]}],[{"start":{"row":9,"column":78},"end":{"row":9,"column":79},"action":"insert","lines":[" "],"id":11},{"start":{"row":9,"column":79},"end":{"row":9,"column":80},"action":"insert","lines":["d"]},{"start":{"row":9,"column":80},"end":{"row":9,"column":81},"action":"insert","lines":["i"]},{"start":{"row":9,"column":81},"end":{"row":9,"column":82},"action":"insert","lines":["s"]},{"start":{"row":9,"column":82},"end":{"row":9,"column":83},"action":"insert","lines":["t"]},{"start":{"row":9,"column":83},"end":{"row":9,"column":84},"action":"insert","lines":["a"]},{"start":{"row":9,"column":84},"end":{"row":9,"column":85},"action":"insert","lines":["n"]},{"start":{"row":9,"column":85},"end":{"row":9,"column":86},"action":"insert","lines":["c"]},{"start":{"row":9,"column":86},"end":{"row":9,"column":87},"action":"insert","lines":["e"]}],[{"start":{"row":9,"column":87},"end":{"row":9,"column":88},"action":"insert","lines":[","],"id":12}],[{"start":{"row":9,"column":88},"end":{"row":9,"column":89},"action":"insert","lines":[" "],"id":13},{"start":{"row":9,"column":89},"end":{"row":9,"column":90},"action":"insert","lines":["i"]},{"start":{"row":9,"column":90},"end":{"row":9,"column":91},"action":"insert","lines":["d"]},{"start":{"row":9,"column":91},"end":{"row":9,"column":92},"action":"insert","lines":["_"]},{"start":{"row":9,"column":92},"end":{"row":9,"column":93},"action":"insert","lines":["e"]},{"start":{"row":9,"column":93},"end":{"row":9,"column":94},"action":"insert","lines":["n"]}],[{"start":{"row":9,"column":94},"end":{"row":9,"column":95},"action":"insert","lines":["t"],"id":14},{"start":{"row":9,"column":95},"end":{"row":9,"column":96},"action":"insert","lines":["i"]},{"start":{"row":9,"column":96},"end":{"row":9,"column":97},"action":"insert","lines":["t"]},{"start":{"row":9,"column":97},"end":{"row":9,"column":98},"action":"insert","lines":["y"]}],[{"start":{"row":9,"column":98},"end":{"row":9,"column":99},"action":"insert","lines":[","],"id":15},{"start":{"row":9,"column":99},"end":{"row":9,"column":100},"action":"insert","lines":["i"]},{"start":{"row":9,"column":100},"end":{"row":9,"column":101},"action":"insert","lines":["d"]}],[{"start":{"row":9,"column":101},"end":{"row":9,"column":102},"action":"insert","lines":["_"],"id":16},{"start":{"row":9,"column":102},"end":{"row":9,"column":103},"action":"insert","lines":["o"]},{"start":{"row":9,"column":103},"end":{"row":9,"column":104},"action":"insert","lines":["c"]},{"start":{"row":9,"column":104},"end":{"row":9,"column":105},"action":"insert","lines":["u"]},{"start":{"row":9,"column":105},"end":{"row":9,"column":106},"action":"insert","lines":["r"]},{"start":{"row":9,"column":106},"end":{"row":9,"column":107},"action":"insert","lines":["r"]},{"start":{"row":9,"column":107},"end":{"row":9,"column":108},"action":"insert","lines":["e"]},{"start":{"row":9,"column":108},"end":{"row":9,"column":109},"action":"insert","lines":["n"]},{"start":{"row":9,"column":109},"end":{"row":9,"column":110},"action":"insert","lines":["c"]},{"start":{"row":9,"column":110},"end":{"row":9,"column":111},"action":"insert","lines":["e"]}],[{"start":{"row":9,"column":111},"end":{"row":9,"column":112},"action":"insert","lines":[","],"id":17},{"start":{"row":9,"column":112},"end":{"row":9,"column":113},"action":"insert","lines":["i"]},{"start":{"row":9,"column":113},"end":{"row":9,"column":114},"action":"insert","lines":["d"]},{"start":{"row":9,"column":114},"end":{"row":9,"column":115},"action":"insert","lines":["_"]},{"start":{"row":9,"column":115},"end":{"row":9,"column":116},"action":"insert","lines":["r"]},{"start":{"row":9,"column":116},"end":{"row":9,"column":117},"action":"insert","lines":["e"]}],[{"start":{"row":9,"column":117},"end":{"row":9,"column":118},"action":"insert","lines":["q"],"id":18},{"start":{"row":9,"column":118},"end":{"row":9,"column":119},"action":"insert","lines":["u"]},{"start":{"row":9,"column":119},"end":{"row":9,"column":120},"action":"insert","lines":["e"]},{"start":{"row":9,"column":120},"end":{"row":9,"column":121},"action":"insert","lines":["s"]},{"start":{"row":9,"column":121},"end":{"row":9,"column":122},"action":"insert","lines":["t"]}],[{"start":{"row":9,"column":122},"end":{"row":9,"column":123},"action":"insert","lines":[","],"id":19},{"start":{"row":9,"column":123},"end":{"row":9,"column":124},"action":"insert","lines":["l"]},{"start":{"row":9,"column":124},"end":{"row":9,"column":125},"action":"insert","lines":["o"]},{"start":{"row":9,"column":125},"end":{"row":9,"column":126},"action":"insert","lines":["c"]},{"start":{"row":9,"column":126},"end":{"row":9,"column":127},"action":"insert","lines":["a"]},{"start":{"row":9,"column":127},"end":{"row":9,"column":128},"action":"insert","lines":["l"]}],[{"start":{"row":9,"column":128},"end":{"row":9,"column":129},"action":"insert","lines":[","],"id":20}],[{"start":{"row":9,"column":129},"end":{"row":9,"column":130},"action":"insert","lines":[" "],"id":21},{"start":{"row":9,"column":130},"end":{"row":9,"column":131},"action":"insert","lines":["o"]},{"start":{"row":9,"column":131},"end":{"row":9,"column":132},"action":"insert","lines":["c"]},{"start":{"row":9,"column":132},"end":{"row":9,"column":133},"action":"insert","lines":["u"]},{"start":{"row":9,"column":133},"end":{"row":9,"column":134},"action":"insert","lines":["r"]},{"start":{"row":9,"column":134},"end":{"row":9,"column":135},"action":"insert","lines":["r"]},{"start":{"row":9,"column":135},"end":{"row":9,"column":136},"action":"insert","lines":["e"]},{"start":{"row":9,"column":136},"end":{"row":9,"column":137},"action":"insert","lines":["n"]},{"start":{"row":9,"column":137},"end":{"row":9,"column":138},"action":"insert","lines":["c"]},{"start":{"row":9,"column":138},"end":{"row":9,"column":139},"action":"insert","lines":["e"]}],[{"start":{"row":9,"column":139},"end":{"row":9,"column":140},"action":"insert","lines":["_"],"id":22},{"start":{"row":9,"column":140},"end":{"row":9,"column":141},"action":"insert","lines":["t"]},{"start":{"row":9,"column":141},"end":{"row":9,"column":142},"action":"insert","lines":["y"]},{"start":{"row":9,"column":142},"end":{"row":9,"column":143},"action":"insert","lines":["p"]},{"start":{"row":9,"column":143},"end":{"row":9,"column":144},"action":"insert","lines":["e"]}],[{"start":{"row":9,"column":144},"end":{"row":9,"column":145},"action":"insert","lines":[","],"id":23},{"start":{"row":9,"column":145},"end":{"row":9,"column":146},"action":"insert","lines":["o"]},{"start":{"row":9,"column":146},"end":{"row":9,"column":147},"action":"insert","lines":["r"]},{"start":{"row":9,"column":147},"end":{"row":9,"column":148},"action":"insert","lines":["i"]},{"start":{"row":9,"column":148},"end":{"row":9,"column":149},"action":"insert","lines":["g"]},{"start":{"row":9,"column":149},"end":{"row":9,"column":150},"action":"insert","lines":["i"]},{"start":{"row":9,"column":150},"end":{"row":9,"column":151},"action":"insert","lines":["n"]}],[{"start":{"row":9,"column":151},"end":{"row":9,"column":152},"action":"insert","lines":[","],"id":24},{"start":{"row":9,"column":152},"end":{"row":9,"column":153},"action":"insert","lines":["s"]},{"start":{"row":9,"column":153},"end":{"row":9,"column":154},"action":"insert","lines":["t"]},{"start":{"row":9,"column":154},"end":{"row":9,"column":155},"action":"insert","lines":["a"]}],[{"start":{"row":9,"column":155},"end":{"row":9,"column":156},"action":"insert","lines":["t"],"id":25},{"start":{"row":9,"column":156},"end":{"row":9,"column":157},"action":"insert","lines":["u"]},{"start":{"row":9,"column":157},"end":{"row":9,"column":158},"action":"insert","lines":["s"]}],[{"start":{"row":9,"column":164},"end":{"row":9,"column":169},"action":"remove","lines":["users"],"id":26},{"start":{"row":9,"column":164},"end":{"row":9,"column":165},"action":"insert","lines":["o"]},{"start":{"row":9,"column":165},"end":{"row":9,"column":166},"action":"insert","lines":["c"]},{"start":{"row":9,"column":166},"end":{"row":9,"column":167},"action":"insert","lines":["u"]},{"start":{"row":9,"column":167},"end":{"row":9,"column":168},"action":"insert","lines":["r"]},{"start":{"row":9,"column":168},"end":{"row":9,"column":169},"action":"insert","lines":["r"]},{"start":{"row":9,"column":169},"end":{"row":9,"column":170},"action":"insert","lines":["r"]},{"start":{"row":9,"column":170},"end":{"row":9,"column":171},"action":"insert","lines":["e"]}],[{"start":{"row":9,"column":170},"end":{"row":9,"column":171},"action":"remove","lines":["e"],"id":27},{"start":{"row":9,"column":169},"end":{"row":9,"column":170},"action":"remove","lines":["r"]}],[{"start":{"row":9,"column":169},"end":{"row":9,"column":170},"action":"insert","lines":["e"],"id":28},{"start":{"row":9,"column":170},"end":{"row":9,"column":171},"action":"insert","lines":["n"]},{"start":{"row":9,"column":171},"end":{"row":9,"column":172},"action":"insert","lines":["c"]},{"start":{"row":9,"column":172},"end":{"row":9,"column":173},"action":"insert","lines":["e"]}],[{"start":{"row":9,"column":183},"end":{"row":9,"column":190},"action":"remove","lines":["dateReg"],"id":29},{"start":{"row":9,"column":183},"end":{"row":9,"column":184},"action":"insert","lines":["i"]},{"start":{"row":9,"column":184},"end":{"row":9,"column":185},"action":"insert","lines":["d"]},{"start":{"row":9,"column":185},"end":{"row":9,"column":186},"action":"insert","lines":["_"]}],[{"start":{"row":9,"column":186},"end":{"row":9,"column":187},"action":"insert","lines":["o"],"id":30},{"start":{"row":9,"column":187},"end":{"row":9,"column":188},"action":"insert","lines":["c"]},{"start":{"row":9,"column":188},"end":{"row":9,"column":189},"action":"insert","lines":["u"]}],[{"start":{"row":9,"column":188},"end":{"row":9,"column":189},"action":"insert","lines":["c"],"id":31}],[{"start":{"row":9,"column":190},"end":{"row":9,"column":191},"action":"insert","lines":["r"],"id":32},{"start":{"row":9,"column":191},"end":{"row":9,"column":192},"action":"insert","lines":["r"]},{"start":{"row":9,"column":192},"end":{"row":9,"column":193},"action":"insert","lines":["e"]},{"start":{"row":9,"column":193},"end":{"row":9,"column":194},"action":"insert","lines":["n"]},{"start":{"row":9,"column":194},"end":{"row":9,"column":195},"action":"insert","lines":["c"]},{"start":{"row":9,"column":195},"end":{"row":9,"column":196},"action":"insert","lines":["e"]}],[{"start":{"row":9,"column":132},"end":{"row":9,"column":133},"action":"insert","lines":["c"],"id":33}],[{"start":{"row":9,"column":104},"end":{"row":9,"column":105},"action":"insert","lines":["c"],"id":34}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":7,"column":15},"end":{"row":7,"column":15},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1607082291476}