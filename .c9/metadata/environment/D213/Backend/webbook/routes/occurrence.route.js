{"changed":false,"filter":false,"title":"occurrence.route.js","tooltip":"/D213/Backend/webbook/routes/occurrence.route.js","value":"const {verify,verifyresponsible} = require('../controllers/middleware.js')\nconst app = require('../app.js');\nconst controllerOccurrence = require('../controllers/occurrence.controller');\nconst validator = require(\"../assets/Validations/validator\");\nconst { responsible} = require('../controllers/auth.controller.js')\n\napp.route('/occurrences/:id_occurrence/responsible')\n    .post(responsible)\n\napp.route('/all_occurrences')\n    .get(verify,controllerOccurrence.readOccurrenceMonths)\n    \napp.route('/finished_occurrences')\n    .get(verify,controllerOccurrence.readFinishedOccurrences)\n    \napp.route('/occurrences')\n    .get( verify,controllerOccurrence.readOccurrence)\n\napp.route('/occurrences/:id_occurrence')\n    .get(verify, controllerOccurrence.readIDOccurrence)\n\napp.route('/unfinished_occurrences')\n    .get(verify,controllerOccurrence.readOccurrenceUnfinished)\n\napp.route('/status/:id_occurrence')\n    .put(verify,verifyresponsible, validator.updateStatus, controllerOccurrence.updateOccurrenceStatus) \n\napp.route('/arrivals/:id_occurrence')\n    .put(verify,verifyresponsible,controllerOccurrence.updateOccurrenceArrival) \n\napp.route('/departures/:id_occurrence')\n    .put(verify,verifyresponsible,controllerOccurrence.updateOccurrenceDeparture) \n\n// Operational Occurrence\napp.route('/occurrences/:id_occurrence/operationals')\n    .get(verify,controllerOccurrence.readOperationalFromOccurrence)\n\napp.route('/occurrences/:id_occurrence/operationals/:id_operational')\n    .get(verify,controllerOccurrence.readIDOperationalOccurrence)\n\napp.route('/occurrences/:id_occurrence/presences/:id_operational')\n    .put(verify,verifyresponsible,validator.updatePresence, controllerOccurrence.updateOperationalOccurrencePresence) \n\napp.route('/occurrences/:id_occurrence/evaluations')\n    .get(verify,controllerOccurrence.readPresentOperationalOccurrence)\n\napp.route('/occurrences/:id_occurrence/evaluations/:id_operational')\n    .put(verify,verifyresponsible,validator.updatePoints, controllerOccurrence.updateOperationalOccurrencePoints) \n\n// Witness Ocurrence\napp.route('/occurrences/:id_occurrence/witnesses')\n    .post(verify,verifyresponsible,validator.addWitness, controllerOccurrence.saveWitnessOccurrence) \n\n\n// Vehicle material occurrence\napp.route('/occurrences/:id_occurrence/materials')\n    .get(verify,verifyresponsible,controllerOccurrence.readVehicleMaterialFromOccurrence)\n\napp.route('/occurrences/:id_occurrence/materials/:id_vei_mat')\n    .put(verify,verifyresponsible,validator.updateConfirmation, controllerOccurrence.updateVehicleMaterialOccurrenceConfirmation) \n\napp.route('/occurrences/:id_occurrence/materials_utilizations') \n    .get(verify,verifyresponsible,controllerOccurrence.readConfirmedVehicleMaterialOccurrence) \n\napp.route('/occurrences/:id_occurrence/materials_utilizations/:id_vei_mat') \n    .put(verify,verifyresponsible,validator.updateUtilization, controllerOccurrence.updateVehicleMaterialOccurrenceUtilization) \n\n// Notes\napp.route('/occurrences/:id_occurrence/notes')\n    .post(verify,verifyresponsible,validator.addNote, controllerOccurrence.saveNote) \n\napp.route('/occurrences/:id_occurrence/helprequests')\n    .post(verify,verifyresponsible,controllerOccurrence.saveOccurrenceHelpRequest)  \n    \nmodule.exports = app;","undoManager":{"mark":-1,"position":-1,"stack":[]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":70,"column":0},"end":{"row":70,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1611595838533}